// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package main

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p := messageKeyToIndex[key]
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en":      &dictionary{index: enIndex, data: enData},
		"zh_Hans": &dictionary{index: zh_HansIndex, data: zh_HansData},
		"zh_Hant": &dictionary{index: zh_HantIndex, data: zh_HantData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"already join a game":    13,
	"already join a match":   11,
	"already signup":         2,
	"delay sign over":        1,
	"get goods info error":   16,
	"get money info error":   17,
	"join error":             12,
	"login time error":       14,
	"match not find":         19,
	"match status error":     0,
	"match user full":        3,
	"matchId or uid error":   18,
	"observe error":          20,
	"quit error":             8,
	"quit time error":        7,
	"sign type error":        5,
	"sign up time error":     4,
	"update money error":     6,
	"update user info error": 15,
	"user is weedout":        10,
	"user not find":          9,
}

var enIndex = []uint32{ // 22 elements
	0x00000000, 0x00000013, 0x00000023, 0x00000032,
	0x00000042, 0x00000055, 0x00000065, 0x00000078,
	0x00000088, 0x00000093, 0x000000a1, 0x000000b1,
	0x000000c6, 0x000000d1, 0x000000e5, 0x000000f6,
	0x0000010d, 0x00000122, 0x00000137, 0x0000014c,
	0x0000015b, 0x00000169,
} // Size: 112 bytes

const enData string = "" + // Size: 361 bytes
	"\x02match status error\x02delay sign over\x02already signup\x02match use" +
	"r full\x02sign up time error\x02sign type error\x02update money error" +
	"\x02quit time error\x02quit error\x02user not find\x02user is weedout" +
	"\x02already join a match\x02join error\x02already join a game\x02login t" +
	"ime error\x02update user info error\x02get goods info error\x02get money" +
	" info error\x02matchId or uid error\x02match not find\x02observe error"

var zh_HansIndex = []uint32{ // 22 elements
	0x00000000, 0x00000013, 0x00000029, 0x00000048,
	0x00000061, 0x00000074, 0x00000087, 0x0000009a,
	0x000000ad, 0x000000ba, 0x000000ca, 0x000000dd,
	0x000000f6, 0x00000109, 0x00000122, 0x00000135,
	0x0000014e, 0x00000167, 0x00000180, 0x00000198,
	0x000001a8, 0x000001b5,
} // Size: 112 bytes

const zh_HansData string = "" + // Size: 437 bytes
	"\x02比赛状态错误\x02延迟报名已结束\x02已报名，请勿重复报名\x02比赛人数已达上限\x02报名时间错误\x02报名类型错误\x02修" +
	"改金币错误\x02退赛时间错误\x02退赛错误\x02用户未找到\x02用户已被淘汰\x02请勿重复加入比赛\x02加入比赛错误\x02请勿" +
	"重复加入游戏\x02加入比赛错误\x02修改用户信息错误\x02获取用户道具错误\x02获取用户金币错误\x02比赛或用户id错误\x02比" +
	"赛未找到\x02旁观错误"

var zh_HantIndex = []uint32{ // 22 elements
	0x00000000, 0x00000013, 0x00000026, 0x00000045,
	0x00000058, 0x0000006b, 0x0000007e, 0x00000091,
	0x000000a4, 0x000000b1, 0x000000c1, 0x000000d1,
	0x000000e4, 0x000000f7, 0x0000010a, 0x00000123,
	0x0000013c, 0x0000014f, 0x00000162, 0x0000017a,
	0x0000018a, 0x00000197,
} // Size: 112 bytes

const zh_HantData string = "" + // Size: 407 bytes
	"\x02比賽狀態錯誤\x02延遲報名結束\x02已報名，請勿重複報名\x02比賽人數已滿\x02報名時間錯誤\x02報名類型錯誤\x02資產操作" +
	"錯誤\x02退賽時間錯誤\x02退賽錯誤\x02用戶未找到\x02用戶已淘汰\x02重複進入比賽\x02加入比賽錯誤\x02重複進入游戲" +
	"\x02加入比賽時間錯誤\x02修改用戶信息錯誤\x02獲取道具失敗\x02獲取金幣失敗\x02比賽或用戶id錯誤\x02比賽未找到\x02旁觀" +
	"失敗"

	// Total table size 1541 bytes (1KiB); checksum: E56DEF28
